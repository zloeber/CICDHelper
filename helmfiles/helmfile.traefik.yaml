---
bases:
- ../config/environments.yaml
- ../config/{{ .Environment.Name }}/helmdefaults.yaml
- ../config/{{ .Environment.Name }}/repositories.yaml
---

releases:
- name: namespace-traefik
  chart: {{ .Values.archetype.chart }}
  version: {{ .Values.archetype.version }}
  namespace: kube-system
  wait: true
  condition: ingress.enabled
  installed: true
  labels:
    chart: namespace-traefik
    component: ingress
    namespace: kube-system
  values:
  - app: traefik
    namespace:
      enabled: true
      name: {{ .Values.ingress.internal.namespace }}

## traefik Deployment
- name: traefik
  chart: {{ .Values.traefik.chart }}
  version: {{ .Values.traefik.version }}
  namespace: {{ .Values.ingress.internal.namespace }}
  condition: ingress.enabled
  installed: true
  labels:
    chart: traefik
    component: traefik
    namespace: {{ .Values.ingress.internal.namespace }}
  needs:
  - kube-system/namespace-traefik
  values:
  - globalArguments:
    - "--global.checknewversion=false"
    - "--global.sendanonymoususage=false"
    - "--api.dashboard=true"
    - "--api.insecure=true"
    additionalArguments:
      - "--providers.kubernetesingress=true"
      - "--providers.kubernetesingress.ingressclass={{ .Values.ingress.internal.class }}"
    ingressRoute:
      dashboard:
        enabled: false
        annotations:
          "cert-manager.io/cluster-issuer": "default"
          "kubernetes.io/ingress.class": "internal"
          "service.beta.kubernetes.io/local-load-balancer-internal": "true"
    service:
      type: LoadBalancer
      spec:
        externalTrafficPolicy: Cluster
        {{- if (ne .Values.ingress.internal.ip "") | default "" }}
        loadBalancerIP: "{{ .Values.ingress.internal.ip }}"
        {{- end }}
      annotations:
        "prometheus.io/scrape": "{{ .Values.monitoring.enabled }}"
        "prometheus.io/port": "9913"
        "service.beta.kubernetes.io/{{ .Values.cloud }}-load-balancer-internal": "true"
    ports:
      traefik:
        expose: true

- name: ingress-traefik-dashboard
  chart: {{ .Values.archetype.chart }}
  version: {{ .Values.archetype.version }}
  namespace: {{ .Values.ingress.internal.namespace }}
  condition: traefik.enabled
  installed: true
  needs:
  - kube-system/namespace-traefik
  - {{ .Values.ingress.internal.namespace }}/traefik
  labels:
    chart: ingress-dashboard
    component: ingress
    namespace: "{{ .Values.ingress.internal.namespace }}"
  values:
  - zone: internal
    app: traefik-dashboard
    ingressClassMap:
      internal: {{ .Values.ingress.internal.class }}
    # certificate:
    #   enabled: true
    #   name: dashboard-ingress-cert
    #   selfSigned: true
    #   commonName: dashboard.{{ .Values.ingress.internal.zone }}
    #   isCA: false
    ingress:
      enabled: true
      tlsEnabled: true
      hosts:
      - name: traefik.{{ .Values.ingress.internal.zone }}
        secretName: ingress-traefik-dashboard
        config:
          http:
            paths:
            - path: "/dashboard"
              backend:
                serviceName: traefik
                servicePort: 8080

# - name: traefik-dashboard
#   namespace: {{ .Values.ingress.internal.namespace }}
#   chart: incubator/raw
#   installed: true
#   labels:
#     chart: traefik-dashboard
#     component: ingress
#     namespace: {{ .Values.ingress.internal.namespace }}
#   needs:
#   - "{{ .Values.ingress.internal.namespace }}/traefik"
#   values:
#   - resources:
#     - apiVersion: traefik.containo.us/v1alpha1
#       kind: IngressRoute
#       metadata:
#         name: traefik-dashboard
#       spec:
#         entryPoints:
#           - web
#         routes:
#           - match: Host(`traefik.{{ .Values.ingress.internal.zone }}`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
#             kind: Rule
#             services:
#               - name: api@internal
#                 kind: TraefikService
