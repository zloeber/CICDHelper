helmDefaults:
  tillerless: true
  tillerNamespace: platform
  atomic: true
  verify: false
  wait: false
  timeout: 900
  recreatePods: false
  force: false

repositories:
- name: koa
  url: "git+https://github.com/rchakode/kube-opex-analytics@helm/kube-opex-analytics"

###############
## Kube-Opex-Analysis
releases:
{{- if eq (env "HELM_VERSION" | default "2") "3" }}
- name: namespace-koa
  # Helm 3 needs to put deployment info into a namespace. As this creates a namespace it will not exist yet so we use 'kube-system' 
  #  which should exist in all clusters.
  chart: ../charts/custom/namespace/chart/namespace
  namespace: kube-system
  labels:
    chart: namespace-koa
    component: "koa"
    namespace: {{ env "STACK_KOA_NAMESPACE" | default "koa" }}
  wait: true
  installed: {{ env "STACK_KOA" | default "true" }}
  values:
  - namespaces:
    - {{ env "STACK_KOA_NAMESPACE" | default "koa" }}
{{- end }}

- name: koa
  namespace: {{ env "STACK_KOA_NAMESPACE" | default "koa" }}
  installed: {{ env "STACK_KOA" | default "true" }}
  chart: koa/kube-opex-analytics
  labels:
    chart: koa
    component: koa
    namespace: {{ env "STACK_KOA_NAMESPACE" | default "koa" }}
{{- if eq (env "HELM_VERSION" | default "2") "3" }}
  needs:
    - kube-system/namespace-koa
{{- end }}
  values:
  - prometheusOperator:
      enabled: false

# - name: koa-servicemonitor
#   chart: "incubator/raw"
#   namespace: {{ env "STACK_MONITORING_NAMESPACE" | default "monitoring" }}
#   labels:
#     component: koa
#     namespace: {{ env "STACK_MONITORING_NAMESPACE" | default "monitoring" }}
#     default: "true"
#   installed: {{ env "STACK_MONITORING" | default "true" }}
#   values:
#   - resources:
#     - apiVersion: monitoring.coreos.com/v1
#       kind: ServiceMonitor
#       metadata:
#         name: koa-servicemonitor
#         namespace: {{ env "STACK_MONITORING_NAMESPACE" | default "monitoring" }}
#         labels:
#           app: koa
#           chart: koa-servicemonitor
#           release: koa
#           heritage: Helm
#           prometheus: {{ env "STACK_MONITORING_PROMETHEUSINSTANCE" | default "kube-prometheus" }}
#       spec:
#         jobLabel: koa
#         namespaceSelector:
#           matchNames:
#           - {{ env "STACK_KOA_NAMESPACE" | default "koa" }}
#         selector:
#           matchLabels:
#             app: kube-opex-analytics
#         endpoints:
#         - targetPort: http
#           path: /metrics
#           interval: 60s
#           scrapeTimeout: 30s

- name: ingress-koa
  namespace: {{ env "STACK_KOA_NAMESPACE" | default "koa" }}
  chart: {{ env "ARCHTYPE_CHART" | default "../charts/custom/archtype" }}
  installed: {{ env "PLATFORM_koa_INSTALLED" | default "true" }}
  labels:
    chart: "ingress-koa"
    component: "ingress"
    namespace: {{ env "STACK_KOA_NAMESPACE" | default "koa" }}
{{- if eq (env "HELM_VERSION" | default "2") "3" }}
  needs:
    - kube-system/namespace-koa
{{- end }}
  values:
  - project:
      team: {{ env "TEAM" | default "team1" }}
      stage: {{ env "STAGE" | default "dev" }}
      target: {{ env "TARGET" | default "cicd" }}
      client: {{ env "CLIENT" | default "client1" }}
    ingressInternalClass: {{ env "STACK_INGRESS_INT_CLASS" | default "internal" }}
    ingressTests: false
    ingress:
      enabled: true
      hosts:
      - name: koa.{{ .Environment.Values.overrides.fqdn | default "micro.svc" }}
        config:
          http:
            paths:
            - path: "/"
              backend:
                serviceName: koa-kube-opex-analytics
                servicePort: http
