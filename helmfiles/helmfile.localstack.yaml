---
bases:
- ../config/environments.yaml
- ../config/helmdefaults.yaml
- ../config/{{ .Environment.Name }}/repositories.yaml
---

releases:
- name: {{ .Values.localstack.name }}-namespace
  chart: {{ .Values | getOrNil "archetype.chart" | default "zloeber/archetype" }}
  version: {{ .Values | getOrNil "archetype.version" | default "0.0.1" }}
  namespace: kube-system
  condition: localstack.enabled
  installed: true
  wait: true
  labels:
    chart: {{ .Values.localstack.name }}-namespace
    component: {{ .Values.localstack.name }}
    namespace: kube-system
  values:
  - app: {{ .Values.localstack.name }}
    namespace:
      enabled: true
      name: {{ .Values.localstack.namespace }}

- name: {{ .Values.localstack.name }}
  chart: {{ .Values | getOrNil "raw.chart" | default "incubator/raw" }}
  namespace: {{ .Values.localstack.namespace }}
  version: {{ .Values | getOrNil "raw.version" | default "0.2.3" }}
  condition: localstack.enabled
  installed: true
  labels:
    chart: {{ .Values.localstack.name }}
    component: {{ .Values.localstack.name }}
    namespace: {{ .Values.localstack.namespace }}
  needs:
  - kube-system/{{ .Values.localstack.name }}-namespace
  values:
  - resources:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: localstack-claim0
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Mi
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: localstack-claim1
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Mi
    - apiVersion: v1
      kind: Service
      metadata:
        creationTimestamp: null
        name: localstack
        labels:
          io.kompose.service: localstack
      spec:
        ports:
        - name: "4566"
          port: 4566
          targetPort: 4566
        - name: "8080"
          port: 8080
          targetPort: 8080
        selector:
          io.kompose.service: localstack
    - apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: localstack
      spec:
        replicas: 1
        selector:
          matchLabels:
            io.kompose.service: localstack
        strategy:
          type: Recreate
        template:
          metadata:
            labels:
              io.kompose.service: localstack
          spec:
            containers:
            - env:
              - name: DATA_DIR
                value: ' '
              - name: DEBUG
                value: ' '
              - name: DOCKER_HOST
                value: unix:///var/run/docker.sock
              - name: HOST_TMP_FOLDER
              - name: KINESIS_ERROR_PROBABILITY
                value: ' '
              - name: LAMBDA_EXECUTOR
                value: ' '
              - name: PORT_WEB_UI
                value: ' '
              - name: SERVICES
                value: ' '
              image: localstack/localstack
              imagePullPolicy: ""
              name: localstack-main
              ports:
              - containerPort: 4566
              - containerPort: 8080
              resources: {}
              volumeMounts:
              - mountPath: /tmp/localstack
                name: localstack-claim0
              - mountPath: /var/run/docker.sock
                name: localstack-claim1
            restartPolicy: Always
            serviceAccountName: ""
            volumes:
            - name: localstack-claim0
              persistentVolumeClaim:
                claimName: localstack-claim0
            - name: localstack-claim1
              persistentVolumeClaim:
                claimName: localstack-claim1

- name: {{ .Values.localstack.name }}-ingress-dashboard
  namespace: {{ .Values.localstack.namespace }}
  chart: {{ .Values | getOrNil "archetype.chart" | default "zloeber/archetype" }}
  version: {{ .Values | getOrNil "archetype.version" | default "0.0.1" }}
  condition: ingress.enabled
  installed: true
  needs:
  - kube-system/{{ .Values.localstack.name }}-namespace
  labels:
    chart: {{ .Values.localstack.name }}-ingress-dashboard
    component: ingress
    namespace: {{ .Values.localstack.namespace }}
  values:
  - zone: internal
    app: {{ .Values.localstack.name }}
    ingressClassMap:
      internal: {{ .Values | getOrNil "ingress.internal.class" | default "internal" }}
    ingress:
      enabled: true
      tlsEnabled: true
      hosts:
      - name: localstack-dashboard.{{ .Values | getOrNil "ingress.internal.zone" | default "int.micro.svc" }}
        secretName: ingress-localstack-dashboard
        config:
          http:
            paths:
            - path: "/"
              backend:
                serviceName: localstack
                servicePort: 8080

- name: {{ .Values.localstack.name }}-ingress-api
  namespace: {{ .Values.localstack.namespace }}
  chart: {{ .Values | getOrNil "archetype.chart" | default "zloeber/archetype" }}
  version: {{ .Values | getOrNil "archetype.version" | default "0.0.1" }}
  condition: ingress.enabled
  installed: true
  needs:
  - kube-system/{{ .Values.localstack.name }}-namespace
  labels:
    chart: {{ .Values.localstack.name }}-ingress-api
    component: ingress
    namespace: {{ .Values.localstack.namespace }}
  values:
  - zone: internal
    app: localstack
    ingressClassMap:
      internal: {{ .Values | getOrNil "ingress.internal.class" | default "internal" }}
    ingress:
      enabled: true
      tlsEnabled: true
      hosts:
      - name: localstack.{{ .Values | getOrNil "ingress.internal.zone" | default "int.micro.svc" }}
        secretName: ingress-localstack-api
        config:
          http:
            paths:
            - path: "/"
              backend:
                serviceName: localstack
                servicePort: 4566