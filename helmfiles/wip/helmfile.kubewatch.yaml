helmDefaults:
  tillerless: true
  tillerNamespace: platform
  atomic: true
  verify: false
  wait: false
  timeout: 900
  recreatePods: false
  force: false

repositories:
- name: stable
  url: https://kubernetes-charts.storage.googleapis.com

###############
## KubeWatch Notifier
releases:
{{- if eq (env "HELM_VERSION" | default "3") "3" }}
- name: namespace-kubewatch
  # Helm 3 needs to put deployment info into a namespace. As this creates a namespace it will not exist yet so we use 'kube-system' 
  #  which should exist in all clusters.
  chart: ../charts/namespace/chart/namespace
  namespace: kube-system
  labels:
    chart: namespace-kubewatch
    component: "kubewatch"
    namespace: "kubewatch"
  wait: true
  installed: true
  values:
  - namespaces:
    - kubewatch
    helmResourcePolicy: keep
    labels:
      {{ env "CLOUD" | default "local" }}-key-vault-env-injection: enabled
    annotations:
      certmanager.k8s.io/disable-validation: "true"
{{- end }}
## Template Deployment
- name: kubewatch
  namespace: kubewatch
  installed: {{ env "PLATFORM_KUBEWATCH_INSTALLED" | default "true" }}
  chart: stable/kubewatch
  labels:
    chart: kubewatch
    component: kubewatch
    namespace: kubewatch
{{- if eq (env "HELM_VERSION" | default "3") "3" }}
  needs:
    - kube-system/namespace-kubewatch
{{- end }}
  values:
  - rbac:
      create: true
    resourcesToWatch:
      daemonset: true
      deployment: false
      pod: true
      replicaset: false
      replicationcontroller: false
      services: true
      secret: false
      configmap: false
    namespaceToWatch: ""
    msteams:
      webhookurl: ""
{{- if env "AKS_RESERVED_NODESELECTOR" | default "" }}
      nodeSelector:
        agentpool: {{ env "AKS_RESERVED_NODESELECTOR" | default "agentpool" }}
{{- end }}

- name: ingress-kubewatch
  namespace: "kubewatch"
  chart: {{ env "ARCHTYPE_CHART" | default "../charts/archtype" }}
  installed: {{ env "PLATFORM_TEMPLATE_INSTALLED" | default "true" }}
  labels:
    chart: "ingress-kubewatch"
    component: "ingress"
    namespace: "kubewatch"
{{- if eq (env "HELM_VERSION" | default "3") "3" }}
  needs:
    - kube-system/namespace-kubewatch
{{- end }}
  values:
  - project:
      team: {{ env "TEAM" | default "team1" }}
      stage: {{ env "STAGE" | default "dev" }}
      target: {{ env "TARGET" | default "cicd" }}
      client: {{ env "CLIENT" | default "client1" }}
    ingressInternalClass: {{ env "STACK_INGRESS_INT_CLASS" | default "internal" }}
    ingress:
      enabled: true
      hosts:
      - name: kubewatch.{{ .Environment.Values.overrides.fqdn | default "micro.svc" }}
        config:
          http:
            paths:
            - path: "/"
              backend:
                serviceName: {{ requiredEnv "STACK_TEMPLATE_CHART_RELEASE" }}-service
                servicePort: 9092
