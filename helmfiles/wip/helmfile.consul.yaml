helmDefaults:
  tillerless: true
  tillerNamespace: platform
  atomic: true
  verify: false
  wait: true
  timeout: 900
  recreatePods: false
  force: false

###############
## Hashicorp's Consul
## Description: Consul config managment
releases:
{{- if eq (env "HELM_VERSION" | default "3") "3" }}
- name: namespace-consul
  # Helm 3 needs to put deployment info into a namespace. As this creates a namespace it will not exist yet so we use 'kube-system' 
  #  which should exist in all clusters.
  chart: ../charts/namespace/chart/namespace
  namespace: kube-system
  labels:
    chart: namespace-consul
    component: "consul"
    namespace: "consul"
  wait: true
  installed: true
  values:
  - namespaces:
    - consul
    helmResourcePolicy: discard
    labels:
      {{ env "CLOUD" | default "local" }}-key-vault-env-injection: enabled
    annotations:
      certmanager.k8s.io/disable-validation: "true"
{{- end }}

## Consul Deployment
- name: consul
  namespace: consul
  installed: {{ env "PLATFORM_CONSUL_INSTALLED" | default "true" }}
  chart: ../charts/consul
  labels:
    chart: consul
    component: consul
    namespace: consul
  hooks:
    # This hook adds the keyvault injection annotation
    - events: ["presync"]
      showlogs: true
      command: "/bin/sh"
      args:
      - "-c"
      - >-
        kubectl get namespace "{{`{{ .Release.Namespace }}`}}" >/dev/null 2>&1 || kubectl create namespace "{{`{{ .Release.Namespace }}`}}";
        kubectl label --overwrite namespace "{{`{{ .Release.Namespace }}`}}" "{{ env "CLOUD" | default "local" }}-key-vault-env-injection=enabled" ;
{{- if eq (env "HELM_VERSION" | default "3") "3" }}
  needs:
    - kube-system/namespace-consul
{{- end }}
  values:
  - global:
      domain: consul
      datacenter: {{ env "TARGET" | default "cicd" }}
    server:
      enabled: true
      storage: 10Gi
      storageClass: null
{{- if env "AKS_RESERVED_NODESELECTOR" | default "" }}
      nodeSelector: |
        agentpool: {{ env "AKS_RESERVED_NODESELECTOR" | default "agentpool" }}
{{- end }}
    client:
      enabled: true
    ui:
      enabled: true
    meshGateway:
      enabled: false
    
- name: ingress-consul
  namespace: "consul"
  chart: {{ env "ARCHTYPE_CHART" | default "../charts/archtype" }}
  installed: {{ env "PLATFORM_CONSUL_INSTALLED" | default "true" }}
  labels:
    chart: "ingress-consul"
    component: "ingress"
    namespace: "consul"
  needs:
    - consul/consul
{{- if eq (env "HELM_VERSION" | default "3") "3" }}
    - kube-system/namespace-consul
{{- end }}
  values:
  - project:
      team: {{ env "TEAM" | default "team1" }}
      stage: {{ env "STAGE" | default "dev" }}
      target: {{ env "TARGET" | default "cicd" }}
      client: {{ env "CLIENT" | default "client1" }}
    ingressInternalClass: {{ env "STACK_INGRESS_INT_CLASS" | default "internal" }}
    ingress:
      enabled: true
      hosts:
      - name: consul.{{ .Environment.Values.overrides.fqdn | default "micro.svc" }}
        config:
          http:
            paths:
            - path: "/"
              backend:
                serviceName: consul-consul-ui
                servicePort: 80
