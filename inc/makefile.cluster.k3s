ROOT_PATH ?= $(abspath $(patsubst %/,%,$(dir $(abspath $(lastword $(MAKEFILE_LIST))))))
BIN_PATH ?= $(ROOT_PATH)/.local/bin

CLUSTER_CONTEXT := default

.PHONY: .deps/cluster.k3s
.deps/cluster.k3s: ## k3s dependencies
	@echo "k3s has no dependencies, skipping"

.PHONY: .k3s/create/cluster
.k3s/create/cluster: ## create k3s cluster
	curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --no-deploy traefik --no-deploy=metrics-server" sh
	#curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --no-deploy traefik --no-deploy=metrics-server --no-deploy servicelb" sh

.PHONY: .k3s/cluster/config
.k3s/cluster/config: ## Export cluster configuration
	sudo cp /etc/rancher/k3s/k3s.yaml $(KUBE_CONFIG)
	sudo chown `whoami`:`whoami` $(KUBE_CONFIG)

.PHONY: .k3s/cluster/disabledefaultstorageclass
.k3s/cluster/disabledefaultstorageclass: ## Exactly as it says
	$(kubecmd) patch storageclass local-path -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'

.PHONY: .k3s/config/ufw
.k3s/config/ufw: ## Configure ufw if required
	sudo ufw allow 6443
	sudo ufw allow 22
	sudo ufw allow 80
	sudo ufw allow 443
	sudo ufw default deny incoming
	#sudo ufw default deny outgoing
	sudo ufw allow in on weave from all || true
	sudo ufw enable

.PHONY: cluster/start
cluster/start: cluster/stop .k3s/create/cluster .k3s/cluster/config .kube/context .k3s/cluster/disabledefaultstorageclass ## Start cluster

.PHONY: cluster/stop
cluster/stop: .prompt/yesno ## Stop and delete cluster
	sudo /usr/local/bin/k3s-uninstall.sh || true
