APP ?= $(CURRENT_FOLDER)
CLOUD ?= azure

# Docker
# Set to --no-cache to run docker build operations from scratch
DOCKER_NC?=
# escape_docker_tag escape colon char to allow use a docker tag as rule
define escape_docker_tag
$(subst :,--,$(1))
endef

# unescape_docker_tag an escaped docker tag to be use in a docker command
define unescape_docker_tag
$(subst --,:,$(1))
endef

REGISTRY_SERVER?=mycontainerrepo
REGISTRY_DOMAIN?=$(REGISTRY_SERVER).azurecr.io

## Docker commands
docker ?= docker
DOCKER_BUILD=$(docker) build
DOCKER_TAG=$(docker) tag
DOCKER_PUSH=$(docker) push
DOCKER_RUN=$(docker) run
DOCKER_RMI=$(docker) rmi -f
DOCKER_EXEC=$(docker) exec

## Docker (derived)
DOCKER_IMAGE?=$(REGISTRY_DOMAIN)/$(APP)
DOCKER_IMAGE_VERSION?=$(DOCKER_IMAGE):$(VERSION)
DOCKER_IMAGE_VERSIONED?=$(call escape_docker_tag,$(DOCKER_IMAGE):$(VERSION))

docker/repo/login: ## Login to docker repository
ifeq ($(CLOUD),azure)
	@az account set --subscription "${AZ_SUBSCRIPTION}"
	az acr login --name $(REGISTRY_SERVER)
endif

docker/deploy: docker/repo/login docker/build docker/tag docker/push ## Build, tag, and push base image

docker/build: ## Build docker image
	@echo "Build Image: ${APP}"
	$(DOCKER_BUILD) . -t $(DOCKER_IMAGE) $(DOCKER_NC)

docker/tag: ## Tag docker image appropriately
	$(DOCKER_TAG) $(DOCKER_IMAGE) $(DOCKER_IMAGE_VERSION)

docker/push: # Push an image
	$(DOCKER_PUSH) $(DOCKER_IMAGE_VERSION)

docker/run/shell: ## Run current docker image interactively with bash shell (as root)
	$(DOCKER_RUN) -i -t --rm -u root --name="$(APP)" $(DOCKER_IMAGE_VERSION) bash

docker/run: ## Run current docker image interactively (as root)
	$(DOCKER_RUN) -i -t --rm -u root --name="$(APP)" $(DOCKER_IMAGE_VERSION)

docker/serve/pgadmin: ## Run pgadmin 4 container locally
	$(docker) run -p 9001:80 \
		-e "PGADMIN_DEFAULT_EMAIL=admin@localhost" \
		-e "PGADMIN_DEFAULT_PASSWORD=admin" \
		-d dpage/pgadmin4
	@echo "pgadmin4 $(docker) image loaded: http://localhost:9001"
	@echo "(default login: admin@localhost/admin)"