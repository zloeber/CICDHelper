DOCKER_APP ?= myapp
DOCKER_PROVIDER ?= dockerhub
VERSION ?= local

# Docker
# Set to --no-cache to run docker build operations from scratch
DOCKER_NC ?=
# escape_docker_tag escape colon char to allow use a docker tag as rule
define escape_docker_tag
$(subst :,--,$(1))
endef

# unescape_docker_tag an escaped docker tag to be use in a docker command
define unescape_docker_tag
$(subst --,:,$(1))
endef

REGISTRY_SERVER ?= mycontainerrepo
ifeq ($(DOCKER_PROVIDER),acr)
REGISTRY_DOMAIN ?= $(REGISTRY_SERVER).azurecr.io/
endif
ifeq ($(DOCKER_PROVIDER),dockerhub)
REGISTRY_DOMAIN ?= https://index.docker.io/v1/
endif

## Docker commands
docker ?= docker
DOCKER_BUILD=$(docker) build
DOCKER_TAG=$(docker) tag
DOCKER_PUSH=$(docker) push
DOCKER_RUN=$(docker) run
DOCKER_RMI=$(docker) rmi -f
DOCKER_EXEC=$(docker) exec

## Docker (derived)
DOCKER_IMAGE := $(REGISTRY_DOMAIN)$(DOCKER_APP)
DOCKER_IMAGE_VERSION := $(DOCKER_IMAGE):$(VERSION)
DOCKER_IMAGE_VERSIONED?=$(call escape_docker_tag,$(DOCKER_IMAGE):$(VERSION))

.PHONY: docker/login
docker/login: ## Login to docker repository
ifeq ($(DOCKER_PROVIDER),acr)
	@az account set --subscription "${AZ_SUBSCRIPTION}"
	az acr login --name $(REGISTRY_SERVER)
endif
ifeq ($(DOCKER_PROVIDER),dockerhub)
	docker login
endif

.PHONY: docker/deploy
docker/deploy: docker/login docker/build docker/tag docker/push ## Build, tag, and push base image

.PHONY: docker/build
docker/build: ## Build docker image
	@echo "Build Image: ${DOCKER_APP}"
	$(DOCKER_BUILD) . -t $(DOCKER_IMAGE) $(DOCKER_NC)

.PHONY: docker/tag
docker/tag: ## Tag docker image appropriately
	$(DOCKER_TAG) $(DOCKER_IMAGE) $(DOCKER_IMAGE_VERSION)

.PHONY: docker/push
docker/push: # Push an image
	$(DOCKER_PUSH) $(DOCKER_IMAGE_VERSION)

.PHONY: docker/run/shell
docker/run/shell: ## Run current docker image interactively with bash shell (as root)
	$(DOCKER_RUN) -i -t --rm -u root --name="$(DOCKER_APP)" $(DOCKER_IMAGE_VERSION) bash

.PHONY: docker/run
docker/run: ## Run current docker image interactively (as root)
	$(DOCKER_RUN) -i -t --rm -u root --name="$(DOCKER_APP)" $(DOCKER_IMAGE_VERSION)

.PHONY: docker/image/rm
docker/image/rm: ## Removes built image
	$(DOCKER_RMI) $(DOCKER_IMAGE_VERSION)

#.PHONY: docker/serve/pgadmin
#docker/serve/pgadmin: ## Run pgadmin 4 container locally
#	$(docker) run -p 9001:80 \
#		-e "PGADMIN_DEFAULT_EMAIL=admin@localhost" \
#		-e "PGADMIN_DEFAULT_PASSWORD=admin" \
#		-d dpage/pgadmin4
#	@echo "pgadmin4 $(docker) image loaded: http://localhost:9001"
#	@echo "(default login: admin@localhost/admin)"