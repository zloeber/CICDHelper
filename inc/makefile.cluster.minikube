ROOT_PATH?=$(abspath $(patsubst %/,%,$(dir $(abspath $(lastword $(MAKEFILE_LIST))))))
BIN_PATH?=$(ROOT_PATH)/.local/bin
HOST_OS:=$(shell sh -c 'uname -s 2>/dev/null || echo not supported' | tr '[:upper:]' '[:lower:]')

minikube := $(BIN_PATH)/minikube

CLUSTER_CONTEXT := $(CLUSTER)

.PHONY: .deps/cluster.minikube
.deps/cluster.minikube: ## Get minikube binary dependency
ifeq (,$(wildcard $(minikube)))
	@$(MAKE) --no-print-directory -C $(APP_PATH)/githubapp auto kubernetes/minikube INSTALL_PATH=$(BIN_PATH)
	@echo "Installed: $(minikube)"
endif

.PHONY: .minikube/create/cluster
.minikube/create/cluster: ## create minikube cluster
	$(minikube) start \
		--cpus=4 \
		--embed-certs=true \
		--wait=all \
		--driver=docker

.PHONY: .minikube/cluster/config
.minikube/cluster/config: ## Export cluster configuration
	$(kubectl) apply -f $(ROOT_PATH)/deploy/k8s/minikube-storage-provisioner.yaml

.PHONY: cluster/start
cluster/start: cluster/stop .minikube/create/cluster .kube/context .minikube/cluster/config ## Start cluster

.PHONY: cluster/stop
cluster/stop: ## Stop and delete cluster
	$(minikube) delete || true

minikube/dnsforward/start: ## Forwards all dns requests to dns-proxy-server
	tmpdir=$$(mktemp -d) && echo "$${tmpdir}" && \
	minikube addons enable ingress && \
	export STACK_INGRESS_INTERNALIP=`minikube ip` && \
	$(gomplate) --file $(DEPLOY_PATH)/dnsproxy/config.json --out "$${tmpdir}/config.json" && \
	$(docker) run --rm -d \
		--hostname $(DNS_DOMAIN) \
		--name dns-proxy-server \
		-p 5380:5380 \
		-v $${tmpdir}:/app/conf \
		-v /var/run/docker.sock:/var/run/docker.sock \
		-v /etc/resolv.conf:/etc/resolv.conf \
		defreitas/dns-proxy-server
