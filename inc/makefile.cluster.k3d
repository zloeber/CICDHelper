ROOT_PATH ?= $(abspath $(patsubst %/,%,$(dir $(abspath $(lastword $(MAKEFILE_LIST))))))
BIN_PATH ?= $(ROOT_PATH)/.local/bin

k3d := $(BIN_PATH)/k3d

KUBE_CLUSTER_CONTEXT := $(KUBE_CLUSTER)
K3D_WORKERS ?= 1
K3D_IMAGE_POSTFIX ?= -k3s1
.PHONY: .deps/cluster.k3d
.deps/cluster.k3d: ## Get k3d binary dependency
ifeq (,$(wildcard $(INSTALL_PATH)/k3d))
	@$(MAKE) --no-print-directory -C $(APP_PATH)/githubapp auto rancher/k3d INSTALL_PATH=$(INSTALL_PATH)
	@echo "Installed: $(k3d)"
endif

.PHONY: .k3d/create/cluster
.k3d/create/cluster: ## create k3d cluster
	$(k3d) create \
		--name $(KUBE_CLUSTER) \
		--image "rancher/k3s:v$(KUBE_VERSION)$(K3D_IMAGE_POSTFIX)" \
		--workers $(K3D_WORKERS) \
		--wait 20 \
		--server-arg "--no-deploy=traefik" \
		--server-arg "--no-deploy=metrics-server" \
		--port 80:80 \
		--port 443:443

.PHONY: .k3d/cluster/config
.k3d/cluster/config: ## Export cluster configuration
	cat $(shell $(k3d) get-kubeconfig --name=$(KUBE_CLUSTER)) > $(KUBE_CONFIG)

.PHONY: cluster/start
cluster/start: cluster/stop .k3d/create/cluster .k3d/cluster/config kube/context ## Start cluster

.PHONY: cluster/stop
cluster/stop: ## Stop and delete cluster
	$(k3d) delete --name $(KUBE_CLUSTER) || true
