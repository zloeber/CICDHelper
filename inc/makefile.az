CICD?=false
CLOUD?=azure
CURRENT_FOLDER?=$(shell basename "$$(pwd)")
AZ_SUBSCRIPTION?=My subscription
ADO_FEED?=my-artifacts-feed
ADO_PROJECT?=ProjectName
ADO_ORG?=OrgName
ADO_REPO_NAME?=$(CURRENT_FOLDER)
ADO_REPO_BRANCH?=develop
ADO_REPO_URI?=ssh://git@ssh.dev.azure.com/v3/${ADO_ORG}/${ADO_PROJECT}/${ADO_REPO_NAME}
ADO_PIPELINE_MANIFEST?=azure-pipelines.yml
VERSION?=0.0.1-SNAPSHOT

.PHONY: az/install az/add/ext az/update/ext az/config/devops az/set/sub az/repo/login git/update git/show/remote az/publish az/set/branch/policy az/show/branch/policy az/set/default/branch

az/install: ## install az cli
	curl -L https://aka.ms/InstallAzureCli | bash

az/add/ext: ## Install az extensions
	az extension add --name azure-devops || true

az/update/ext: ## Update az extensions
	az extension update --name azure-devops || true

az/config/devops: ## Points to correct remote org for az cli operations
	az devops configure --defaults \
		organization=$(ADO_ORG) \
		project=$(ADO_PROJECT) \
		detect=false

az/set/sub: ## Sets Azure subscription
	az account set --subscription "$(AZ_SUBSCRIPTION)"


az/set/acr/sub: ## Sets Azure subscription
	az account set --subscription "$(CONTAINERREGISTRY_SUB)"


az/aks/getcreds: ## Set azure aks cluster context
ifeq ($(CICD),false)
	az aks get-credentials --resource-group ${RG} --name ${CLUSTER} --overwrite-existing
endif

az/create/pipeline: ## Create azure devops pipeline
	az pipelines create \
		--skip-run --detect false \
		--branch $(ADO_REPO_BRANCH) \
		--yaml-path $(ADO_PIPELINE_MANIFEST) \
		--name "$(ADO_PROJECT) Pipeline" \
		--repository $(ADO_REPO_NAME) \
		--repository-type tfsgit || true

az/create/repo: ## Create devops repo for this project
	az repos create --name "$(ADO_REPO_NAME)" \
		--project "$(ADO_PROJECT)" \
		--organization "https://dev.azure.com/$(ADO_ORG)/"

az/init/repo: ## Initialize git and push to devops repo
	git init && \
	git remote add origin "$(ADO_REPO_URI)" && \
	git add --all . && \
	git commit -m "Feat: Initial Commit" && \
	git push -u origin --all

az/set/default/branch: ## Set default branch
	az repos update --detect false --default-branch $(ADO_REPO_BRANCH) -r $(ADO_PROJECT)

az/show/branch/policy:  ## Show ADO branch policies for develop
	az repos policy list \
		--detect false \
		--branch $(ADO_REPO_BRANCH) \
		--repository-id `az repos show --detect false -r $(ADO_PROJECT) --query id -o tsv`

az/set/branch/policy: ## Set branch policy
	az repos policy approver-count create \
		--branch $(ADO_REPO_BRANCH) \
		--enabled true \
		--blocking true \
		--minimum-approver-count 1 \
		--reset-on-source-push true \
		--creator-vote-counts false \
		--allow-downvotes true \
		--repository-id $(ADO_PROJECT)

az/publish/artifact: ## Publish universal artifact
	az artifacts universal publish \
	--detect false \
	--organization "https://$(ADO_ORG).visualstudio.com/" \
	--feed "$(ADO_FEED)" \
	--name "$(ADO_REPO_NAME)" \
	--version "$(VERSION)" \
	--description "$(ADO_REPO_NAME)-$(VERSION)" \
	--path ./target/scala-2.12/

az/show/acr/report: ## Displays report of registry size for the environment
	az acr show-usage --resource-group $${RG} --name nextgen$${TARGET} --output table

az/aks/show/networking: ## Show aks VM accelerated networking settings
	az network nic list -o table --resource-group `az vm show --resource-group `az aks show --resource-group $${RG} --name $${CLUSTER} --query nodeResourceGroup -o tsv` --query osProfile.computerName`

az/local/acr: ## Set current default container registry
	az acr login --name ${PRIVATECONTAINERREGISTRY} --subscription "${AZ_SUBSCRIPTION}"

az/shared/acr: ## Set current default container registry
	az acr login --name mycontainerrepo --subscription "HAVI RTB NonProd"

az/aks/show/managementgroup: ## Show aks management resource group
	az vm show --resource-group `az aks show --resource-group $${RG} --name $${CLUSTER} --query nodeResourceGroup -o tsv` --query osProfile.computerName

az/aks/show/spn: ## Show aks node ips
	az aks show --name ${CLUSTER} --resource-group ${RG} --query servicePrincipalProfile.clientId -o tsv

az/aks/show/nodepool: ## Show aks node pools
	az aks nodepool list --cluster-name ${CLUSTER} --resource-group ${RG} -o table

az/aks/show/nodepool/members: ## Show aks node pool members
	az aks nodepool show --cluster-name ${CLUSTER} --resource-group ${RG} --name agentpool -o table

az/helm/acr/init: ## Connect to ACR for helm chart
	az acr login --name ${CONTAINERREGISTRY} --subscription "${CONTAINERREGISTRY_SUB}"
	az account set --subscription "${CONTAINERREGISTRY_SUB}"

az/helm/add/repo: ## Add acr to helm repos
	az acr helm repo add -n ${CONTAINERREGISTRY} --subscription "${CONTAINERREGISTRY_SUB}"
	helm update

az/helm/list: ## List available charts
	az acr helm list -n ${CONTAINERREGISTRY} -o table  --subscription "${CONTAINERREGISTRY_SUB}"
