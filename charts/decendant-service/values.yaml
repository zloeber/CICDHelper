archetype:
  app: base-svc
  zone: internal

  # Useful for cleaner looking manifests. Unset this in shared environments
  # fullnameOverride: base-svc
  # Generally leave this as false unless a pipeline is using helm3, does not precreate the namespace, and is not using the namespace plugin
  namespace:
    enabled: false
  # These are pulled into the namespace by the cluster. Enable and define all that the service requires
  keyvaultSecrets:
    enabled: false
    vaultName: keyvaultname
    type: secret
    secrets: []
    # - secretKey: JDBCURL
    # - secretKey: CASSANDRAPASSWORD
    # - secretKey: CHECKPOINTACCOUNTKEY
    # - secretKey: STORAGEACCOUNTKEY

  image:
    ## Your application image (defaults to the current base service image if not provided!)
    repository: mycontainerrepo.azurecr.io/dataflow-base-svc
    tag: '0.2.0'
    pullPolicy: IfNotPresent
  affinity:
    enabled: true
    nodePoolLabel: agentpool
    nodePoolTarget: agentpool
  resources:
    requests:
      memory: "1Gi"
    limits:
      memory: "1Gi"
  configMaps:
    ## Configmap containing non-sensitive environment variables. 
    ## Updating this in any way will update the deployment via an automatically generated hash
    enabled: true
    env:
      APP: "dataflow-base-svc"
  deployment:
    enabled: true
    ports:
      ## This is a single pod deployment, define all ports it will expose by name here
      metrics: 8088
    readinessProbe:
      ## Change these probes if you have an application specific probe to use instead (preferred)
      enabled: true
      probe:
        httpGet:
          path: /metrics
          port: 8088
    livelinessProbe:
      enabled: true
      probe:
        httpGet:
          path: /metrics
          port: 8088
    pod:
      ## Additional sourced env vars should be placed here, including keyvault synced secrets defined above.
      env: []
      # - name: CHECKPOINT_ACCOUNT_KEY
      #   valueFrom:
      #     secretKeyRef:
      #       name: checkpointaccountkey
      #       key: CHECKPOINTACCOUNTKEY
      # - name: STORAGE_ACCOUNT_KEY
      #   valueFrom:
      #     secretKeyRef:
      #       name: storageaccountkey
      #       key: STORAGEACCOUNTKEY
      # - name: CASSANDRA_PASSWORD
      #   valueFrom:
      #     secretKeyRef:
      #       name: cassandrapassword
      #       key: CASSANDRAPASSWORD
      # - name: JDBC_URL
      #   valueFrom:
      #     secretKeyRef:
      #       name: jdbcurl
      #       key: JDBCURL
  service:
    ## Enable your custom services here. Metrics is included by default and require no additional configuration if service monitoring is enabled.
    enabled: false
    ports:
      svc:
        port: 8080
        targetPort: 8080
        protocol: TCP
  ## Monitoring requires an exposed metrics service. The default base image includes this.
  prometheus:
    enabled: true
    namespace: monitoring
    instance: kube-prometheus
    ## Enable service monitoring
    serviceMonitor:
      enabled: true
      targetPort: 8088
      path: /metrics
      interval: 60s
      scrapeTimeout: 30s
    ## Enable default PrometheusRule alerts for:
    ## - KubePodCrashLooping
    ## - PodFailure
    ## - ServiceDown
    ## - PodPendingUnknown
    alerts:
      enabled: true

