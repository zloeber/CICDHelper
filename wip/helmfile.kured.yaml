helmDefaults:
  tillerless: true
  tillerNamespace: platform
  atomic: true
  verify: false
  wait: false
  timeout: 600
  recreatePods: false
  force: true

#####################
## Kured - Automatic kube node reboots
## Info: https://github.com/weaveworks/kured
repositories:
- name: stable
  url: https://kubernetes-charts.storage.googleapis.com/
- name: zloeber
  url: git+https://github.com/zloeber/helm-namespace/chart

releases:
{{- if eq (env "HELM_VERSION" | default "3") "3" }}
- name: namespace-kured
  # Helm 3 needs to put deployment info into a namespace. As this creates a namespace it will not exist yet so we use 'kube-system' 
  #  which should exist in all clusters.
  chart: zloeber/namespace
  namespace: kube-system
  labels:
    chart: namespace-kured
    component: kured
    namespace: {{ env "STACK_KURED_NAMESPACE" | default "kured" }}
  wait: true
  installed: {{ env "STACK_KURED" | default "true" }}
  values:
  - namespaces:
    - {{ env "STACK_KURED_NAMESPACE" | default "kured" }}
{{- end }}
- name: kured
  namespace: {{ env "STACK_KURED_NAMESPACE" | default "kured" }}
  chart: stable/kured
  labels:
    chart: kured
    component: platform
    namespace: {{ env "STACK_KURED_NAMESPACE" | default "kured" }}
  installed: {{ env "STACK_KURED" | default "true" }}
{{- if eq (env "HELM_VERSION" | default "3") "3" }}
  needs:
  - kube-system/namespace-kured
{{- end }}
  values:
  - extraArgs:
      prometheus-url: http://{{ env "STACK_MONITORING_PROMETHEUSINSTANCE" | default "kube-prometheus" }}.{{ env "STACK_MONITORING_NAMESPACE" | default "monitoring" }}.svc:9090

- name: kured-service
  chart: incubator/raw
  namespace: {{ env "STACK_KURED_NAMESPACE" | default "kured" }}
  labels:
    component: kured
    namespace: {{ env "STACK_KURED_NAMESPACE" | default "kured" }}
  installed: {{ env "STACK_KURED" | default "true" }}
  values:
  - resources:
    - apiVersion: v1
      kind: Service
      metadata:
        name: kured
        labels:
          app: kured
          chart: kured-service
          release: kured
      spec:
        ports:
        - name: metrics
          port: 8088
          protocol: TCP
          targetPort: metrics
        selector:
          app: kured
          release: kured
        sessionAffinity: None
        type: ClusterIP

- name: kured-servicemonitor
  chart: "incubator/raw"
  namespace: {{ env "STACK_MONITORING_NAMESPACE" | default "monitoring" }}
  labels:
    component: "kured"
    namespace: {{ env "STACK_MONITORING_NAMESPACE" | default "monitoring" }}
    default: "true"
  installed: {{ env "STACK_KURED" | default "true" }}
  values:
  - resources:
    - apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      metadata:
        name: kured
        namespace: {{ env "STACK_MONITORING_NAMESPACE" | default "monitoring" }}
        labels:
          app: kured
          chart: kured-servicemonitor
          release: kured
          heritage: Helm
          prometheus: {{ env "PROMETHEUS_INSTANCE" | default "kube-prometheus" }}
      spec:
        jobLabel: kured
        namespaceSelector:
          matchNames:
          - {{ env "STACK_KURED_NAMESPACE" | default "kured" }}
        selector:
          matchLabels:
            app: kured
            release: kured
        endpoints:
        - targetPort: 8080
          path: /metrics
          interval: 60s
          scrapeTimeout: 30s

- name: kured-monitors
  namespace: {{ env "STACK_KURED_NAMESPACE" | default "kured" }}
  chart: ../charts/archetype
  labels:
    chart: kured-monitors
    component: monitoring
    namespace: {{ env "STACK_KURED_NAMESPACE" | default "kured" }}
  values:
    - project:
        app: kured
        team: inv
        target: {{ env "TARGET" | default "cicd" }}
        client: {{ env "CLIENT" | default "client1" }}
      prometheus:
        instance: {{ env "PROMETHEUS_INSTANCE" | default "kube-prometheus" }}
        enabled: true
        customRules:
          enabled: true
          rules:
            platform.kured.rules:
            - alert: cluster.node.RebootRequired
              expr: count(kured_reboot_required) BY (instance) * ON (instance) GROUP_LEFT (node) kured_reboot_required > 0
              for: 5m
              labels:
                severity: warning
              annotations:
                title: "Cluster nodes require a reboot."
                description: "Cluster node require a reboot. Node: {{` {{ $labels.node }} `}}"
